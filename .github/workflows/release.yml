name: Build and (Pre)Release

on:
  push:
    branches:
      - main
      - develop/**

jobs:
  tag-release:
    name: Generate Release
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub App Token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ steps.generate-token.outputs.token }}
          persist-credentials: false
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.1
        with:
          versionSpec: '5.12.0'
      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.2.1
        with:
          useConfigFile: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools poetry
      - name: Install build tools
        run: |
          pip install build
      - name: Inject version into lib_version
        run: |
          echo "__version__ = \"${sanitized_version}\"" > lib_version/version.py
      - name: Build package
        run: |
          python -m build
      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: lib-version
          path: dist/*
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          token: ${{ steps.generate-token.outputs.token }}
          tag_name: ${{ steps.gitversion.outputs.semVer }}
          name: Release ${{ steps.gitversion.outputs.semVer }}
          target_commitish: ${{ github.sha }}
          generate_release_notes: true
          prerelease: ${{ contains(steps.gitversion.outputs.semVer, '-') }}
       
